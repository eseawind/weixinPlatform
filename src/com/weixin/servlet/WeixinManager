package com.weixin.servlet;

import com.weixin.daoimpl.WeixinCouponDaoImpl;
import com.weixin.daoimpl.WeixinMemberDaoImpl;
import com.weixin.daoimpl.WeixinMessageDaoImpl;
import com.weixin.domain.TB_Unit;
import com.weixin.domain.TB_WeixinCoupon;
import com.weixin.domain.TB_WeixinMember;
import com.weixin.domain.TB_WeixinMessage;
import com.weixin.utility.FileUpload;
import com.weixin.utility.Hint;

import java.io.File;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import net.sf.json.JSONObject;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;

/**
 * @author wjh
 *
 * @date 2013-9-17
 * 
 * 微信平台信息管理
 * 
 * 将会被分解成多个servlet
 */
public class WeixinManager extends HttpServlet {
	
	private static final long serialVersionUID = 1L;
	private WeixinMessageDaoImpl messageDao = WeixinMessageDaoImpl.getInstance();
	private WeixinMemberDaoImpl memberDao = WeixinMemberDaoImpl.getInstance();
	private WeixinCouponDaoImpl couponDao = WeixinCouponDaoImpl.getInstance();

	private String path = "/WEB-INF/contents/HotelAdminManager/";

	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		doPost(request, response);
	}

	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		String action = request.getParameter("action");
		if (action == null){
			action = "manager";
		}
		if (action.equals("member")) {
			//会员管理
			weixinManager(0, request, response);
		}
		else if (action.equals("message")) {
			weixinManager(1, request, response);
		} else if (action.equals("food")) {
			weixinManager(2, request, response);
		} else if (action.equals("coupon")) {
			weixinManager(3, request, response);
		} else if (action.equals("updateMember")) {
			updateMember(request, response);
		} else if (action.equals("uploadFoodPic")) {
			if (new FileUpload().upload(request, response)) {
				response.getWriter().println("ok");
			} else {
				response.getWriter().println("false");
			}
		} else if (action.equals("updateMessage")) {
			updateMessage(request, response);
		} else if (action.equals("QRCode")) {
			uploadQRCode(request, response);
		}
	}

	protected void weixinManager(Integer id, HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		Integer unitID = (Integer) request.getSession()
				.getAttribute("unitID");

		if (id.intValue() == 0) {
			List<TB_WeixinMember> weixin = this.memberDao.findByUnit(unitID);
			request.setAttribute("weixin", weixin);
			request.getRequestDispatcher(this.path + "weixinmember.jsp")
					.forward(request, response);
		} else if ((id.intValue() == 1) || (id.intValue() == 2)) {
			TB_WeixinMessage weixin = this.messageDao.findByUnit(unitID);
			request.setAttribute("weixin", weixin);
			String page = null;
			if (id.intValue() == 1)
				page = "weixinmessage.jsp";
			else
				page = "weixinfood.jsp";
			request.getRequestDispatcher(this.path + page).forward(request,
					response);
		} else {
			List<TB_WeixinCoupon> coupon = this.couponDao.findByUnit(unitID);
			request.setAttribute("coupon", coupon);
			request.getRequestDispatcher(this.path + "weixincoupon.jsp")
					.forward(request, response);
		}
	}

	protected void updateMember(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");
		Integer unitID = (Integer) request.getSession()
				.getAttribute("unitID");
		String message = request.getParameter("message");
		Date updateTime = new Date();
		TB_WeixinMessage weixin = this.messageDao.findByUnit(unitID);
		if (weixin != null) {
			weixin.setMessage(message);
			weixin.setUpdateTime(updateTime);
			this.messageDao.saveOrUpdate(weixin);
			Hint.hint("修改成功！", "WeixinManager?action=member", request, response);
		} else {
			weixin = new TB_WeixinMessage();
			TB_Unit unit = unitDao.findByUnitID(unitID);
			weixin.setUnit(unit);
			weixin.setMessage(message);
			weixin.setUpdateTime(updateTime);
			this.messageDao.saveOrUpdate(weixin);
			Hint.hint("添加成功！", "WeixinManager?action=member", request, response);
		}
	}

	protected void updateMessage(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html; charset=UTF-8");

		Integer unitID = (Integer) request.getSession()
				.getAttribute("unitID");
		TB_WeixinMessage weixin = this.messageDao.findByUnit(unitID);
		if (weixin == null) {
			weixin = new TB_WeixinMessage();
		}

		weixin.setUnit(unitID);

		String messageType = request.getParameter("messageType");

		if (messageType.equals("food")) {
			String select = request.getParameter("select");
			Integer picNum = Integer.valueOf(Integer.parseInt(request
					.getParameter("picNum")));
			JSONObject json = new JSONObject();
			if (select.equals("way1")) {
				String[] picUrl = new String[picNum.intValue()];
				String[] jumpUrl = new String[picNum.intValue()];
				String[] picName = request.getParameterValues("picName1");
				String[] picTitle = request.getParameterValues("title1");
				String[] picDesc = request.getParameterValues("desc1");
				for (int i = 0; i < picNum.intValue(); i++) {
					picUrl[i] = ("http://61.28.112.242/TVProtal/html/"
							+ unitID + "/food/" + picName[i]);

					jumpUrl[i] = ("http://61.28.112.242/TVProtal/html/"
							+ unitID + "/food/" + picName[i]);
				}
				json.element("picNum", picNum);
				json.element("picUrl", picUrl);
				json.element("picTitle", picTitle);
				json.element("picDesc", picDesc);
				json.element("jumpUrl", jumpUrl);
			} else {
				String[] picUrl = new String[picNum.intValue()];
				String[] jumpUrl = new String[picNum.intValue()];
				String[] picDesc = new String[picNum.intValue()];
				String[] picName = request.getParameterValues("picName2");
				String[] picTitle = request.getParameterValues("title2");
				for (int i = 0; i < picNum.intValue(); i++) {
					picDesc[i] = "";
					picUrl[i] = ("http://61.28.112.242/TVProtal/html/"
							+ unitID + "/food/" + picName[i]);

					jumpUrl[i] = ("http://61.28.112.242/TVProtal/html/"
							+ unitID + "/food/" + picName[i]);
				}
				json.element("picNum", picNum);
				json.element("picUrl", picUrl);
				json.element("picTitle", picTitle);
				json.element("picDesc", picDesc);
				json.element("jumpUrl", jumpUrl);
			}
			weixin.setMessage(json.toString());
			this.messageDao.saveOrUpdate(weixin);
			Hint.hint("保存成功", "WeixinManager?action=food", request, response);
		} else if (messageType.equals("message")) {
			Integer score = Integer.valueOf(Integer.parseInt(request
					.getParameter("score")));
			Integer term = Integer.valueOf(Integer.parseInt(request
					.getParameter("term")));
			String message = request.getParameter("message");
			weixin.setMessage(message);
			weixin.setScore(score);
			weixin.setTerm(term);
			this.messageDao.saveOrUpdate(weixin);
		} else if (messageType.equals("coupon")) {
			TB_WeixinCoupon coupon = new TB_WeixinCoupon();
			String couponName = request.getParameter("couponName");
			String memo = request.getParameter("memo");
			DateFormat format = new SimpleDateFormat("yyyy-MM-dd hh:ss:mm");
			Date expiredDate = null;
			Date startedDate = null;
			try {
				expiredDate = format.parse(request.getParameter("expiredDate"));
				coupon.setExpiredDate(expiredDate);
				startedDate = format.parse(request.getParameter("startedDate"));
				coupon.setStartedDate(startedDate);
			} catch (ParseException e) {
				e.printStackTrace();
			}
			coupon.setCouponName(couponName);
			coupon.setMemo(memo);
			DateFormat tmpFormat = new SimpleDateFormat("yyyyMMdd");
			String couponID = tmpFormat.format(new Date());
			coupon.setCouponID(couponID);
			coupon.setUnit(unitID);
			this.couponDao.saveOrUpdate(coupon);
		}
	}

	protected void uploadQRCode(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		request.setCharacterEncoding("UTF-8");
		HttpSession session = request.getSession();
		String filepath = null;
		Integer hotelid = (Integer) session.getAttribute("unitID");
		filepath = getServletContext().getRealPath("/") + "html/" + hotelid
				+ "/qrcode/qrcode.jpg";
		try {
			DiskFileItemFactory factory = new DiskFileItemFactory();
			ServletFileUpload upload = new ServletFileUpload(factory);
			List<FileItem> items = upload.parseRequest(request);
			Iterator<FileItem> iter = items.iterator();
			String file = null;
			while (iter.hasNext()) {
				FileItem item = (FileItem) iter.next();
				if (item.isFormField())
					continue;
				file = item.getName();
				if ((file == "") || (file == null))
					continue;
				item.write(new File(filepath));
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		Hint.hint("二维码上传成功", "WeixinManager?action=discount", request, response);
	}
}